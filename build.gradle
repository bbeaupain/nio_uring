plugins {
    id 'java'
    id 'c'
    id 'jacoco'
    id 'maven'
}

group 'sh.blake.niouring'
version '0.1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    testLogging.showStandardStreams = true
    systemProperty "java.library.path", file("${buildDir}/libs/nio_uring/shared").absolutePath
}

jacoco {
    toolVersion = "0.8.2"
}

processResources {
    from "${buildDir}/libs/nio_uring/shared/"
}

model {
    binaries {
        all {
            if (toolChain in Gcc) {
                cCompiler.args "-O2"
            }
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            jdk {
                headers.srcDirs "${System.properties['java.home']}/include",
                        "${System.properties['java.home']}/include/win32",
                        "${System.properties['java.home']}/include/darwin",
                        "${System.properties['java.home']}/include/linux"
            }

            liburing {
                headers.srcDirs "${System.getenv("LIBURING_PATH")}/src",
                        "${System.getenv("LIBURING_PATH")}/src/include",
                        "${System.getenv("LIBURING_PATH")}/src/include/liburing"
                binaries.withType(PrebuiltStaticLibraryBinary) {
                    staticLibraryFile = file("${System.getenv("LIBURING_PATH")}/src/liburing.a")
                }
            }
        }
    }

    platforms {
        x64 { architecture "x86_64" }
        x86 { architecture "x86" }
    }

    components {
        nio_uring(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        lib library: 'nio_uring', linkage: 'static'
                        lib library: 'liburing', linkage: 'static'
                        lib library: 'jdk', linkage: 'api'
                        srcDir "src/main/c"
                        include "**/*.c"
                    }
                }
            }
        }
    }
}

build.dependsOn("nio_uringSharedLibrary")
test.dependsOn("nio_uringSharedLibrary")
processResources.dependsOn("nio_uringSharedLibrary")